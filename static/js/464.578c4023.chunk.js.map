{"version":3,"file":"static/js/464.578c4023.chunk.js","mappings":"iOAEaA,E,OAAOC,EAAAA,KAAH,iE,4DCOJC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAc3B,OACE,SAACC,EAAA,EAAD,CAAWC,UAAU,MAAMC,SAAS,KAAKC,MAAO,CAAED,SAAU,KAA5D,UACE,UAACE,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,gBAAiB,OACjBC,aAAc,OACdC,QAAS,OACTC,UAAW,kCATf,WAYE,eAAIV,MAAO,CAAEW,UAAW,UAAxB,4BACA,UAACvB,EAAD,CAAMwB,SA3BS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfzB,EAAO,CACL0B,MAAOF,EAAKG,SAASD,MAAME,MAC3BC,SAAUL,EAAKG,SAASE,SAASD,QAE9B3B,GAAwB,OAAXG,GAChBoB,EAAKM,OAER,EAiBmCC,aAAa,MAA3C,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAW,EACXC,WAAS,EACTC,MAAM,QACNC,KAAK,QACLP,aAAa,QACbQ,KAAK,QACLC,QAAQ,cAEV,SAACR,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAW,EACXG,KAAK,WACLD,MAAM,WACNE,KAAK,WACLR,aAAa,mBACbS,QAAQ,aAETvC,GACC,SAACwC,EAAA,EAAD,CAAQD,QAAQ,YAAY/B,MAAO,CAAEG,UAAW,OAIhD,SAAC6B,EAAA,EAAD,CAAQF,KAAK,SAASC,QAAQ,YAAY/B,MAAO,CAAEG,UAAW,IAA9D,2BAQX,E,UCnEc,SAAS8B,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXxC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,KAE3BwC,EAAAA,EAAAA,YAAU,WACO,wCAAXzC,IACF0C,EAAAA,OAAAA,QAAe,4FACfH,GAASI,EAAAA,EAAAA,OAEZ,GAAE,CAAC3C,EAAQuC,IAMZ,OACE,4BACE,sCACA,SAAC5C,EAAD,CAAWC,OAPI,SAAAgD,GACjBL,GAASM,EAAAA,EAAAA,IAAMD,GAChB,MAQF,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 320px;\n  border-radius: 20px;\n`;\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   margin-bottom: 16px;\n// `;\n// export const Span = styled.span`\n//   color: #0047ab;\n// `;\n","import { Form } from './LoginForm.styled';\nimport { Button, TextField, Box, Container } from '@mui/material';\n// import { Puff } from 'react-loading-icons';\nimport { useSelector } from 'react-redux';\nimport {\n  selectAuthIsLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-selectors';\n\nexport const LoginForm = ({ onData }) => {\n  const isLoading = useSelector(selectAuthIsLoading);\n  const status = useSelector(selectAuthError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    onData({\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    });\n    if (!isLoading && status !== null) {\n      form.reset();\n    }\n  };\n\n  return (\n    <Container component=\"div\" maxWidth=\"xs\" style={{ maxWidth: 440 }}>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          backgroundColor: '#fff',\n          borderRadius: '20px',\n          padding: '40px',\n          boxShadow: ' rgb(33 33 33) 0px 2px 5px 1px',\n        }}\n      >\n        <h1 style={{ textAlign: 'center' }}>Log in please</h1>\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth={true}\n            autoFocus\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            type=\"email\"\n            variant=\"standard\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth={true}\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"standard\"\n          />\n          {isLoading ? (\n            <Button variant=\"contained\" style={{ marginTop: 30 }}>\n              {/* <Puff height={22} stroke=\"#fff\" /> */}\n            </Button>\n          ) : (\n            <Button type=\"submit\" variant=\"contained\" style={{ marginTop: 30 }}>\n              Log In\n            </Button>\n          )}\n        </Form>\n      </Box>\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { LoginForm } from '../components/LoginForm/LoginForm';\nimport { selectAuthError } from '../redux/auth/auth-selectors';\nimport { logIn, clearAuthError } from '../redux/auth/auth-operation';\n\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const status = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (status === 'Request failed with status code 400') {\n      Notify.failure('You have entered an incorrect email address or password, or you have not yet registered!');\n      dispatch(clearAuthError());\n    }\n  }, [status, dispatch]);\n\n  const onRegister = data => {\n    dispatch(logIn(data));\n  };\n\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm onData={onRegister} />\n    </div>\n  );\n}"],"names":["Form","styled","LoginForm","onData","isLoading","useSelector","selectAuthIsLoading","status","selectAuthError","Container","component","maxWidth","style","Box","sx","marginTop","display","flexDirection","alignItems","backgroundColor","borderRadius","padding","boxShadow","textAlign","onSubmit","e","preventDefault","form","currentTarget","email","elements","value","password","reset","autoComplete","TextField","margin","required","fullWidth","autoFocus","label","name","type","variant","Button","Login","dispatch","useDispatch","useEffect","Notify","clearAuthError","data","logIn"],"sourceRoot":""}