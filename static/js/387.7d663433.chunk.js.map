{"version":3,"file":"static/js/387.7d663433.chunk.js","mappings":"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","sources":["redux/contacts/selector.jsx","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #828e6d;\n  padding: 30px;\n  width: 360px;\n  background-color: #c5cbba;\n  border-radius: 20px;\n  margin-bottom: 50px;\n`;\n\nexport const Input = styled.input`\n  margin-left: auto;\n  width: 270px;\n  height: 30px;\n  border-radius: 10px;\n  border: 1px solid #828e6d;\n  font-size: 20px;\n  padding-left: 10px;\n  color: #8e6d8a;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  margin-bottom: 35px;\n  color: #8e6d8a;\n`;\n\n\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact, updateContact } from '../../redux/contacts/cont-operation';\nimport { selectContacts } from '../../redux/contacts/selector';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { nanoid } from 'nanoid';\nimport { Button } from '@mui/material';\nimport {\n  AiOutlineUser,\n  AiOutlineUserAdd,\n  AiTwotonePhone,\n} from 'react-icons/ai';\nimport { Form, Input, Label } from './ContactForm.styled';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const existingContact = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (existingContact) {\n      dispatch(updateContact({ ...existingContact, number }));\n      Notify.failure(`${name} this contact already exists.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    Notify.success(`${name} added to your list.`);\n    form.reset();\n  };\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label>\n        <AiOutlineUser />\n        Name :{' '}\n        <Input\n          type=\"text\"\n          id={nameId}\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <AiTwotonePhone />\n        Phone :\n        <Input\n          type=\"tel\"\n          id={numberId}\n          name=\"number\"\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button\n        type=\"submit\"\n        style={{ backgroundColor: '#8e6d8a', marginTop: 30 }}\n        variant=\"contained\"\n        endIcon={<AiOutlineUserAdd />}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  border: 1px solid #828e6d;\n  width: 300px;\n  height: 35px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  border-radius: 7px;\n  color: #8e6d8a;\n  font-size: 20px;\n  padding-left: 10px;\n`;\n\nexport const Label = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  gap: 10px;\n`;\n\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filter-slice';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n  const changeFilter = e => {\n    handleFilterChange(e.currentTarget.value);\n  };\n\n  return (\n    <Label>\n      <Input type=\"text\" onChange={changeFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Text = styled.div`\n  font-size: 20px;\n  color: #8e6d8a;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectError } from '../../redux/contacts/selector';\nimport { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { deleteContact } from '../../redux/contacts/cont-operation';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\nimport { List, Text } from './ContactItem.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const loader = () => {\n    setLoading(true);\n  };\n\n  return (\n    <List>\n      <Text>\n        {name}: {number}\n      </Text>\n      {loading && !error ? (\n        <Button\n          style={{ backgroundColor: '#8e6d8a', marginLeft: 25, height: 36 }}\n          variant=\"contained\"\n        ></Button>\n      ) : (\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          size=\"small\"\n          style={{ backgroundColor: '#8e6d8a'}}\n          endIcon={<AiOutlineUserDelete />}\n          onClick={() => {\n            dispatch(deleteContact(id));\n            loader();\n          }}\n        >\n          Delete\n        </Button>\n      )}\n    </List>\n  );\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  min-width: 360px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  border-radius: 20px;\n  padding: 20px;\n  background-color: #c5cbba;\n  margin: 0;\n  border: 1px solid #828e6d;\n`;\n\nexport const Text = styled.p`\n  color: #8e6d8a;\n  font-size: 20px;\n`;","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selector';\nimport { Contact } from '../ContactItem/ContactItem';\nimport { List, Text } from './ContactList.styled';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {visibleContacts.length > 0 ? (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Contact key={id} id={id} name={name} number={number}>\n            </Contact>\n          ))}\n        </List>\n      ) : (\n        <Text>There are no contacts in your Phonebook. <br /> You can add one!</Text>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n\n","import styled from '@emotion/styled';\nimport Images2 from '../../images/b.jpg';\n\nexport const Containers = styled.div`\n  display: flex;\n  gap: 30px;\n  border: 2px dotted #828e6d;\n  border-radius: 25px;\n  background-image: url(${Images2});\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 930px;\n  padding: 50px;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 700;\n  font-size: 36px;\n  text-align: center;\n  margin: 40px;\n  color: #828e6d;\n`;\n\nexport const Subtitle = styled.h2`\n  font-weight: 700;\n  font-size: 26px;\n  margin-bottom: 15px;\n  color: #8e6d8a;\n`;\n\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoading, selectError } from '../../redux/contacts/selector';\nimport { fetchContacts } from '../../redux/contacts/cont-operation';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactList/ContactList';\nimport { Containers, Title, Subtitle } from './ContactsPage.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title>Name & Phone</Title>\n      <Containers>\n        <div>\n          <Subtitle>Add new contact</Subtitle>\n          <ContactForm />\n          <Subtitle>Find contacts</Subtitle>\n          <Filter />\n        </div>\n        <div>\n          <Subtitle>Contacts list</Subtitle>\n          {isLoading && !error && <b>in progress...</b>}\n          <ContactsList />\n        </div>\n      </Containers>\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","value","selectIsLoading","isLoading","selectError","error","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Form","styled","Input","Label","dispatch","useDispatch","useSelector","nameId","numberId","autoComplete","onSubmit","e","preventDefault","form","target","name","elements","number","existingContact","find","contact","toLowerCase","updateContact","Notify","addContact","reset","type","pattern","title","required","Button","style","backgroundColor","marginTop","variant","endIcon","onChange","currentTarget","setFilter","List","Text","Contact","useState","loading","setLoading","marginLeft","height","onClick","deleteContact","visibleContacts","includes","length","map","Containers","Images2","Title","Subtitle","Contacts","useEffect","fetchContacts"],"sourceRoot":""}