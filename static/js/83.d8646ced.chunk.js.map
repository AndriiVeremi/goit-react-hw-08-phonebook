{"version":3,"file":"static/js/83.d8646ced.chunk.js","mappings":"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","sources":["redux/contacts/selector.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.styled.js","pages/ContactsPage.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #3d9be8;\n  padding: 30px;\n  width: 360px;\n  background-color: #f4f6fc;\n  border-radius: 20px;\n  margin-bottom: 50px;\n`;\n\nexport const Input = styled.input`\n  margin-left: auto;\n  width: 270px;\n  height: 30px;\n  border-radius: 10px;\n  border: 1px solid #3d9be8;\n  font-size: 20px;\n  padding-left: 10px;\n  color: #3d9be8;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  margin-bottom: 35px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 110px;\n  height: 30px;\n  margin: 0 auto;\n  border: 1px solid #565656;\n  border-radius: 5px;\n`;\n\n\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/cont-operation';\nimport { selectContacts } from '../../redux/contacts/selector';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from '@mui/material';\nimport {\n  AiOutlineUser,\n  AiOutlineUserAdd,\n  AiTwotonePhone,\n} from 'react-icons/ai';\nimport { Form, Input, Label } from './ContactForm.styled';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const checkName = name => {\n    const newName = name.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === newName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!checkName(name)) {\n      dispatch(addContact({ name, number }));\n      Notify.success('The contact has been sent to storage');\n      reset();\n    } else {\n      Notify.failure('Sorry, Not a unique contact');\n      return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label>\n        <AiOutlineUser />\n        Name :{' '}\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <AiTwotonePhone />\n        Phone :\n        <Input\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\" variant=\"contained\" endIcon={<AiOutlineUserAdd />}>\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #2196f3;\n  width: 300px;\n  height: 35px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  border-radius: 7px;\n`;\n\n\n\n\n\nexport const FilterDiv = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const FilterTitle = styled.h3`\n  font-size: 15px;\n  margin: 10px auto;\n`;\nexport const FilterInput = styled.input`\n  background-color: #f5fffb;\n  border: 1px solid #ababab;\n  border-radius: 3px;\n  width: 150px;\n  margin: 0 auto;\n`;","import { FilterTitle, FilterInput, FilterDiv } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filter-slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n  const changeFilter = e => {\n    handleFilterChange(e.currentTarget.value);\n  };\n\n  return (\n    <FilterDiv>\n      <FilterTitle style={{ fontFamily: 'Caveat', fontWeight: '600' }}>\n        Find contacts by name:\n      </FilterTitle>\n      <FilterInput type=\"text\" onChange={changeFilter} />\n    </FilterDiv>\n  );\n};\n\nexport default Filter;\n\n","import styled from '@emotion/styled';\n\nexport const ContactLi = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectError } from '../../redux/contacts/selector';\nimport { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { ContactLi } from './Contact.styled';\nimport { deleteContact } from '../../redux/contacts/cont-operation';\n\nexport const Contact = ({ id, name, number }) => {\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loader = () => {\n    setIsLoading(true);\n  };\n\n  return (\n    <ContactLi>\n      <p style={{ fontFamily: 'Caveat', fontWeight: '400', fontSize: 18 }}>\n        {name}: {number}\n      </p>\n      {isLoading && !error ? (\n        <Button style={{ marginLeft: 25, height: 36 }} variant=\"contained\">\n        </Button>\n      ) : (\n        <Button\n          type=\"button\"\n          style={{ marginLeft: 25, height: 36 }}\n          variant=\"contained\"\n          size=\"small\"\n          onClick={() => {\n            dispatch(deleteContact(id));\n            loader();\n          }}\n        >\n          Delete\n        </Button>\n      )}\n    </ContactLi>\n  );\n};","import styled from '@emotion/styled';\n\n// export const Item = styled.li`\n//   display: flex;\n//   align-items: center;\n// `;\n\n// export const Name = styled.p`\n//   margin-right: 20px;\n// `;\n\n// export const Text = styled.p`\n//   margin-right: 40px;\n// `;\n\n// export const Button = styled.button`\n//   border: 1px solid #2196f3;\n//   border-radius: 5px;\n//   margin-left: auto;\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-around;\n//   width: 80px;\n//   height: 20px;\n//   color: #f44336;\n//   font-weight: 700;\n// `;\n\n\n\n\n\n// export const List = styled.ul`\n//   margin: 0;\n//   padding: 0 0 0 15px;\n//   list-style-type: circle;\n// `;\n// export const Li = styled.li`\n//   display: list-item;\n//   font-size: 12px;\n// `;\n// export const Delete = styled.button`\n//   background-color: #ffcec8;\n//   border: 1px solid grey;\n//   border-radius: 3px;\n//   margin-left: 7px;\n//   padding: 3px;\n//   font-size: 12px;\n//   height: min-content;\n//   &:hover,\n//   &:active,\n//   &:focus {\n//     background-color: teal;\n//   }\n// `;\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const List = styled.ul`\n  list-style: none;\n  min-width: 360px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  border: 2px solid #0047ab;\n  border-radius: 3px;\n  padding: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 100%;\n  background-color: transparent;\n  border: none;\n  font-size: 18px;\n  font-weight: 500;\n  color: #0047ab;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Text = styled.p`\n  color: #0047ab;\n  font-size: 16px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selector';\nimport { deleteContact } from '../../redux/contacts/cont-operation';\nimport {Contact} from '../Contact/Contact';\nimport { Button, List, Text } from './ContactList.styled';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {visibleContacts.length > 0 ? (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Contact key={id} id={id} name={name} number={number}>\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </Button>\n            </Contact>\n          ))}\n        </List>\n      ) : (\n        <Text>There are no contacts in your Phonebook. You can add one!</Text>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n\n","import styled from '@emotion/styled';\n\nexport const Containers = styled.div`\n  display: flex;\n  gap: 100px;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 600;\n  font-size: 36px;\n  text-align: center;\n  margin-bottom: 40px;\n  color: #fff;\n`;\n\nexport const Subtitle = styled.h2`\n  font-weight: 500;\n  font-size: 24px;\n  margin-bottom: 10px;\n  color: #fff;\n`;\n\n// export const Span = styled.span`\n//   color: #2196f3;\n// `;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoading, selectError } from '../redux/contacts/selector';\nimport { fetchContacts } from '../redux/contacts/cont-operation';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactsList from '../components/ContactList/ContactList';\nimport { Containers, Title, Subtitle } from '../pages/ContactsPage.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title>Phone Book</Title>\n      <Containers>\n        <div>\n          <Subtitle>Add new contact</Subtitle>\n          <ContactForm />\n          <Subtitle>Find contacts</Subtitle>\n          <Filter />\n        </div>\n        <div>\n          <Subtitle>Contacts list</Subtitle>\n          {isLoading && !error && <b>in progress...</b>}\n          <ContactsList />\n        </div>\n      </Containers>\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","value","selectIsLoading","isLoading","selectError","error","Form","styled","Input","Label","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","reset","autoComplete","onSubmit","preventDefault","newName","toLowerCase","find","checkName","Notify","addContact","type","onChange","pattern","title","required","Button","variant","endIcon","FilterDiv","FilterTitle","FilterInput","style","fontFamily","fontWeight","setFilter","ContactLi","Contact","id","setIsLoading","fontSize","marginLeft","height","size","onClick","deleteContact","List","Text","visibleContacts","contact","includes","length","map","Containers","Title","Subtitle","Contacts","useEffect","fetchContacts"],"sourceRoot":""}